{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAe,SAmBrC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAaP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7BU,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAGxE,SAASc,EAASL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC5BU,EAAAjB,GAASkB,OAAOI,QAAQ,sBAAqCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CA7CrEL,EAAKqB,iBAAkB,UAGvB,SAAsBC,GACpBA,EAAMC,iBAEN,IAIIC,EAAAF,EAAMG,OAHCpB,EAGPmB,EAHFnB,MAASqB,MACDC,EAENH,EAFFG,KAAQD,MACEE,EACRJ,EADFI,OAAUF,MAGZG,QAAQC,IAAIzB,EAAOsB,EAAMC,GAmB3B,SAAuBvB,EAAOsB,EAAMC,GAClC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAIlC5B,EAHwB4B,EAAI,EACR1B,EAAQsB,EAAOI,GAESC,KAAKnB,GAAWoB,MAAMd,E,EAtBpEe,CAAcC,OAAO9B,GAAQ8B,OAAOR,GAAOQ,OAAOP,G,IAbpDC,QAAQC,IAAI9B,EAAKoC,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(`.form`);\n\nform.addEventListener(`submit`, onFormSubmit);\nconsole.log(form.elements);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount },\n  } = event.target;\n\n  console.log(delay, step, amount);\n\n  promisesCycle(Number(delay), Number(step), Number(amount));\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promisesCycle(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    const promisePosition = i + 1;\n    const delayAmount = delay + step * i;\n\n    createPromise(promisePosition, delayAmount).then(onResolve).catch(onReject);\n  }\n}\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onResolve","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$onReject","failure","addEventListener","event","preventDefault","_target","target","value","step","amount","console","log","i","then","catch","$ce04d3a99e08e73b$var$promisesCycle","Number","elements"],"version":3,"file":"03-promises.2b49a988.js.map"}